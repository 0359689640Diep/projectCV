{"ast":null,"code":"import axios from \"axios\";\nconst httpRequest = axios.create({\n  baseURL: \"http://localhost:7000/api/\"\n});\nconst token = localStorage.getItem(\"accessToken\");\nexport const update = async (url, data, id, headers = '\"Content-Type\": \"multipart/form-data\"') => {\n  try {\n    const response = await httpRequest.put(`${url}${id}`, data, {\n      headers: {\n        headers\n      }\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const get = async (url, option = {}, tokens = null) => {\n  const response = await httpRequest.get(url, option, {});\n  return response.data;\n};\nexport const post = async (url, data, headers = '\"Content-Type\": \"multipart/form-data\"') => {\n  try {\n    const response = await httpRequest.post(`${url}`, data, {\n      headers: {\n        headers,\n        Authorization: token\n      }\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const remote = async (url, id) => {\n  const response = await httpRequest.delete(url, id, {\n    headers: {\n      Authorization: token\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","httpRequest","create","baseURL","token","localStorage","getItem","update","url","data","id","headers","response","put","error","get","option","tokens","post","Authorization","remote","delete"],"sources":["D:/FPT Polytechnic/ListProject/Project_MyCV/fontend/src/utils/httpRequest.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst httpRequest = axios.create({\r\n    baseURL: \"http://localhost:7000/api/\"\r\n});\r\nconst token = localStorage.getItem(\"accessToken\");\r\n\r\nexport const update = async (url, data, id, headers = '\"Content-Type\": \"multipart/form-data\"') => {\r\n    try {\r\n        const response = await httpRequest.put(`${url}${id}`, data, {\r\n            headers: {\r\n                headers\r\n            }\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}\r\n\r\nexport const get = async(url, option = {}, tokens = null) => {\r\n    const response = await httpRequest.get(url, option, {\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const post = async (url, data, headers = '\"Content-Type\": \"multipart/form-data\"') => {\r\n    try {\r\n        \r\n        const response = await httpRequest.post(`${url}`, data, {\r\n            headers: {\r\n                headers,\r\n                Authorization: token\r\n            }\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}\r\n\r\n\r\nexport const remote = async(url, id) => {\r\n    const response = await httpRequest.delete(url, id, {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    });\r\n    return response.data\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAEjD,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,OAAO,GAAG,uCAAuC,KAAK;EAC9F,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,GAAG,CAAE,GAAEL,GAAI,GAAEE,EAAG,EAAC,EAAED,IAAI,EAAE;MACxDE,OAAO,EAAE;QACLA;MACJ;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAED,OAAO,MAAMG,GAAG,GAAG,MAAAA,CAAMP,GAAG,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAEC,MAAM,GAAG,IAAI,KAAK;EACzD,MAAML,QAAQ,GAAG,MAAMX,WAAW,CAACc,GAAG,CAACP,GAAG,EAAEQ,MAAM,EAAE,CACpD,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACH,IAAI;AACxB,CAAC;AAED,OAAO,MAAMS,IAAI,GAAG,MAAAA,CAAOV,GAAG,EAAEC,IAAI,EAAEE,OAAO,GAAG,uCAAuC,KAAK;EACxF,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACiB,IAAI,CAAE,GAAEV,GAAI,EAAC,EAAEC,IAAI,EAAE;MACpDE,OAAO,EAAE;QACLA,OAAO;QACPQ,aAAa,EAAEf;MACnB;IACJ,CAAC,CAAC;IACF,OAAOQ,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAGD,OAAO,MAAMQ,MAAM,GAAG,MAAAA,CAAMZ,GAAG,EAAEE,EAAE,KAAK;EACpC,MAAME,QAAQ,GAAG,MAAMX,WAAW,CAACoB,MAAM,CAACb,GAAG,EAAEE,EAAE,EAAE;IAC/CC,OAAO,EAAE;MACLQ,aAAa,EAAEf;IACnB;EACJ,CAAC,CAAC;EACF,OAAOQ,QAAQ,CAACH,IAAI;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}