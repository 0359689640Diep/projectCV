{"ast":null,"code":"var _jsxFileName = \"E:\\\\FPT Polytechnic\\\\ListProject\\\\Project_MyCV\\\\fontend\\\\src\\\\pages\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport className from \"classnames/bind\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./Login.module.scss\";\nimport { images } from \"../../asset/img\";\nimport Input from \"../../components/components/Input\";\nimport Button from \"../../components/components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = className.bind(styles);\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevents the default form submission behavior\n\n    try {\n      const response = await axios.post(\"http://localhost:7000/api/account/signin\", {\n        email: email,\n        password: password\n      });\n      console.log(response);\n      // Add logic for handling successful login (e.g., redirect to another page)\n    } catch (error) {\n      console.log(error);\n      // Add logic for handling login failure (e.g., show an error message)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: cx(\"container\"),\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: cx(\"images\"),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images.Lovlyze,\n          alt: \"lovlyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: cx(\"content\"),\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/login\",\n          method: \"post\",\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"Gmail\",\n            type: \"email\",\n            required: \"true\",\n            title: \"gmail cannot be empty\",\n            id: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"Password\",\n            type: \"password\",\n            required: \"true\",\n            title: \"password cannot be empty\",\n            id: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            name: \"Login\",\n            type: \"submit\",\n            width: \"30%\",\n            height: \"15%\",\n            margin: \"4% 35%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["className","useState","axios","styles","images","Input","Button","jsxDEV","_jsxDEV","cx","bind","Login","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","response","post","console","log","error","children","src","Lovlyze","alt","fileName","_jsxFileName","lineNumber","columnNumber","action","method","onSubmit","name","type","required","title","id","onChange","target","value","width","height","margin","_c","$RefreshReg$"],"sources":["E:/FPT Polytechnic/ListProject/Project_MyCV/fontend/src/pages/Login/index.js"],"sourcesContent":["import className from \"classnames/bind\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport styles from \"./Login.module.scss\";\r\nimport { images } from \"../../asset/img\";\r\nimport Input from \"../../components/components/Input\";\r\nimport Button from \"../../components/components/Button\";\r\n\r\nconst cx = className.bind(styles);\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault(); // Prevents the default form submission behavior\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:7000/api/account/signin\", {\r\n                email: email,\r\n                password: password\r\n            });\r\n            console.log(response);\r\n            // Add logic for handling successful login (e.g., redirect to another page)\r\n        } catch (error) {\r\n            console.log(error);\r\n            // Add logic for handling login failure (e.g., show an error message)\r\n        }\r\n    };\r\n\r\n\r\n    return ( \r\n        <main>\r\n            <section className={cx(\"container\")}>\r\n                <article className = {cx(\"images\")}>\r\n                    <img src={images.Lovlyze} alt=\"lovlyze\"/>\r\n                </article>\r\n                <section  className={cx(\"content\")}>\r\n                    <form action=\"/login\" method=\"post\" onSubmit={handleLogin} >\r\n                        <Input \r\n                            name=\"Gmail\"\r\n                            type=\"email\"\r\n                            required = \"true\"\r\n                            title= \"gmail cannot be empty\"\r\n                            id=\"email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Input \r\n                            name=\"Password\"\r\n                            type=\"password\"\r\n                            required = \"true\"\r\n                            title= \"password cannot be empty\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            name=\"Login\"\r\n                            type= \"submit\"\r\n                            width = \"30%\"\r\n                            height= \"15%\"\r\n                            margin= \"4% 35%\"\r\n                        />\r\n                    </form>\r\n                 </section>\r\n            </section>\r\n        </main>\r\n     );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}