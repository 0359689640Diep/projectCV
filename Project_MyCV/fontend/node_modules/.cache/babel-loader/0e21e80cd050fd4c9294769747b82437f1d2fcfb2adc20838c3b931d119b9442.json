{"ast":null,"code":"import * as httpRequest from \"../utils/httpRequest\";\nimport { Notification } from \"../components/notification\";\nexport const postAccount = async body => {\n  try {\n    const response = await httpRequest.post(`account/createAccount`, body);\n    return response;\n  } catch (error) {\n    if (error.response.status === 403) {\n      Notification(error.response.data.message, \"error\", \"/login\");\n    }\n    ;\n    return error;\n  }\n};\nexport const logOut = async () => {\n  try {\n    const response = await httpRequest.post(`account/sign-out`, {}, '\"Content-Type\": \"application/json\"');\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const singIn = async body => {\n  try {\n    const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const updateAccount = async (data, id) => {\n  try {\n    const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\n    return response;\n  } catch (error) {\n    if (error.response.status === 403) {\n      Notification(error.response.data.message, \"error\", \"/login\");\n    }\n    ;\n    return error;\n  }\n};\nexport const getAccount = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccount`, {}, true);\n    return response;\n  } catch (error) {\n    if (error.response.status === 403) {\n      Notification(error.response.data.message, \"error\", \"/login\");\n    }\n    ;\n  }\n};\nexport const getAccountForClient = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccountForClient`, {});\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAccountByRequest = async request => {\n  try {\n    const response = await httpRequest.get(`account/${request}`);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAccount = async id => {\n  try {\n    const response = await httpRequest.remote('account/deleteAccount', id);\n    return response;\n  } catch (error) {\n    if (error.response.status === 403) {\n      Notification(error.response.data.message, \"error\", \"/login\");\n    }\n    ;\n    return error.response;\n  }\n};","map":{"version":3,"names":["httpRequest","Notification","postAccount","body","response","post","error","status","data","message","logOut","singIn","updateAccount","id","update","getAccount","get","getAccountForClient","console","log","getAccountByRequest","request","deleteAccount","remote"],"sources":["D:/FPT Polytechnic/ListProject/projectCV/Project_MyCV/fontend/src/Services/account.js"],"sourcesContent":["import * as httpRequest from \"../utils/httpRequest\";\r\nimport { Notification } from \"../components/notification\";\r\n\r\nexport const postAccount = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/createAccount`, body);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            Notification(error.response.data.message, \"error\", \"/login\");\r\n        };     \r\n        return error;\r\n    }\r\n};\r\nexport const logOut = async () => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/sign-out`, {}, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) { \r\n        return error;\r\n    }\r\n};\r\nexport const singIn = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const updateAccount = async (data, id) => {\r\n    try {\r\n        const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            Notification(error.response.data.message, \"error\", \"/login\");\r\n        };        \r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getAccount = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccount`, {}, true);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            Notification(error.response.data.message, \"error\", \"/login\");\r\n        };\r\n    }\r\n}\r\nexport const getAccountForClient = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccountForClient`, {});\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getAccountByRequest = async (request) => {\r\n    try {\r\n        const response = await httpRequest.get(`account/${request}`);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deleteAccount = async (id) => {\r\n    try {\r\n        const response = await httpRequest.remote('account/deleteAccount', id);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            Notification(error.response.data.message, \"error\", \"/login\");\r\n        };\r\n        return error.response;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}