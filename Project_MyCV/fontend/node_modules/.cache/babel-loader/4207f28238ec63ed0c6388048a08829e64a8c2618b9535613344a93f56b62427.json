{"ast":null,"code":"import * as httpRequest from \"../utils/httpRequest\";\nexport const postAccount = async body => {\n  try {\n    const response = await httpRequest.post(`account/createAccount`, body);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const logOut = async () => {\n  try {\n    const response = await httpRequest.post(`account/sign-out`, {}, '\"Content-Type\": \"application/json\"');\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const singIn = async body => {\n  try {\n    const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const updateAccount = async (data, id) => {\n  try {\n    const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getAccount = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccount`, {}, true);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getAccountForClient = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccountForClient`, {});\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getAccountByRequest = async request => {\n  try {\n    const response = await httpRequest.get(`account/${request}`);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const deleteAccount = async id => {\n  try {\n    const response = await httpRequest.remote('account/deleteAccount', id);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};","map":{"version":3,"names":["httpRequest","postAccount","body","response","post","error","logOut","singIn","updateAccount","data","id","update","getAccount","get","getAccountForClient","getAccountByRequest","request","deleteAccount","remote"],"sources":["D:/FPT Polytechnic/ListProject/projectCV/Project_MyCV/fontend/src/Services/account.js"],"sourcesContent":["\r\nimport * as httpRequest from \"../utils/httpRequest\";\r\n\r\nexport const postAccount = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/createAccount`, body);\r\n        return response;\r\n    } catch (error) {  \r\n        return error.response;\r\n    }\r\n};\r\nexport const logOut = async () => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/sign-out`, {}, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) { \r\n        return error.response;\r\n    }\r\n};\r\nexport const singIn = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n};\r\n\r\nexport const updateAccount = async (data, id) => {\r\n    try {\r\n        const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\r\n        return response;\r\n    } catch (error) {  \r\n        return error.response;\r\n    }\r\n}\r\n\r\nexport const getAccount = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccount`, {}, true);\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}\r\nexport const getAccountForClient = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccountForClient`, {});\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}\r\n\r\nexport const getAccountByRequest = async (request) => {\r\n    try {\r\n        const response = await httpRequest.get(`account/${request}`);\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}\r\n\r\nexport const deleteAccount = async (id) => {\r\n    try {\r\n        const response = await httpRequest.remote('account/deleteAccount', id);\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}"],"mappings":"AACA,OAAO,KAAKA,WAAW,MAAM,sBAAsB;AAEnD,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EAEvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAE,uBAAsB,EAAEF,IAAI,CAAC;IACtE,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AACD,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;EAE9B,IAAI;IACA,MAAMH,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAE,kBAAiB,EAAE,CAAC,CAAC,EAAE,oCAAoC,CAAC;IACrG,OAAOD,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AACD,OAAO,MAAMI,MAAM,GAAG,MAAOL,IAAI,IAAK;EAElC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAE,gBAAe,EAAEF,IAAI,EAAE,oCAAoC,CAAC;IACrG,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,KAAK;EAC7C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,WAAW,CAACW,MAAM,CAAC,wBAAwB,EAAEF,IAAI,EAAEC,EAAE,EAAE,IAAI,CAAC;IACnF,OAAOP,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,WAAW,CAACa,GAAG,CAAE,uBAAsB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACzE,OAAOV,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AACD,OAAO,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMH,WAAW,CAACa,GAAG,CAAE,gCAA+B,EAAE,CAAC,CAAC,CAAC;IAC5E,OAAOV,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAED,OAAO,MAAMY,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMH,WAAW,CAACa,GAAG,CAAE,WAAUG,OAAQ,EAAC,CAAC;IAC5D,OAAOb,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC;AAED,OAAO,MAAMc,aAAa,GAAG,MAAOP,EAAE,IAAK;EACvC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,WAAW,CAACkB,MAAM,CAAC,uBAAuB,EAAER,EAAE,CAAC;IACtE,OAAOP,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}