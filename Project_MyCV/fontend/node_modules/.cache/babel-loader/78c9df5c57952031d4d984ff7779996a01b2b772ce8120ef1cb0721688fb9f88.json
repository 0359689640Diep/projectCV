{"ast":null,"code":"import*as httpRequest from\"../utils/httpRequest\";import{notification}from\"../components/notification\";const createProject=async data=>{try{return await httpRequest.post(\"/project/create\",data);}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error;}};const updateProject=async(data,id)=>{try{return await httpRequest.update(\"/project/update/\",data,id,true);}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error;}};const deleteProject=async id=>{try{return await httpRequest.remote('/project/delete',id);}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error;}};const getProject=async()=>{try{return await httpRequest.get(\"/project/\",{});}catch(error){return error;}};export{createProject,deleteProject,updateProject,getProject};","map":{"version":3,"names":["httpRequest","notification","createProject","data","post","error","response","status","message","updateProject","id","update","deleteProject","remote","getProject","get"],"sources":["D:/FPT Polytechnic/ListProject/projectCV/Project_MyCV/fontend/src/Services/project.js"],"sourcesContent":["import * as httpRequest from \"../utils/httpRequest\";\r\nimport { notification } from \"../components/notification\";\r\n\r\nconst createProject = async (data) => {\r\n    try {\r\n        return await httpRequest.post(\"/project/create\", data);\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };        \r\n        return error;\r\n    }\r\n}\r\n\r\nconst updateProject = async (data, id) => {\r\n    try {\r\n        return await httpRequest.update(\"/project/update/\", data, id, true);\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };        \r\n        return error;\r\n    }\r\n}\r\n\r\nconst deleteProject = async (id) => {\r\n    try {\r\n        return await httpRequest.remote('/project/delete',id);\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };        \r\n        return error;\r\n    }\r\n}\r\n\r\nconst getProject = async () => {\r\n    try {\r\n        return await httpRequest.get(\"/project/\", {});\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\nexport {createProject, deleteProject, updateProject, getProject};"],"mappings":"AAAA,MAAO,GAAK,CAAAA,WAAW,KAAM,sBAAsB,CACnD,OAASC,YAAY,KAAQ,4BAA4B,CAEzD,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,IAAI,EAAK,CAClC,GAAI,CACA,MAAO,MAAM,CAAAH,WAAW,CAACI,IAAI,CAAC,iBAAiB,CAAED,IAAI,CAAC,CAC1D,CAAE,MAAOE,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACI,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACK,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAChB,CACJ,CAAC,CAED,KAAM,CAAAI,aAAa,CAAG,KAAAA,CAAON,IAAI,CAAEO,EAAE,GAAK,CACtC,GAAI,CACA,MAAO,MAAM,CAAAV,WAAW,CAACW,MAAM,CAAC,kBAAkB,CAAER,IAAI,CAAEO,EAAE,CAAE,IAAI,CAAC,CACvE,CAAE,MAAOL,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACI,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACK,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAChB,CACJ,CAAC,CAED,KAAM,CAAAO,aAAa,CAAG,KAAO,CAAAF,EAAE,EAAK,CAChC,GAAI,CACA,MAAO,MAAM,CAAAV,WAAW,CAACa,MAAM,CAAC,iBAAiB,CAACH,EAAE,CAAC,CACzD,CAAE,MAAOL,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACI,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACK,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAChB,CACJ,CAAC,CAED,KAAM,CAAAS,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,MAAO,MAAM,CAAAd,WAAW,CAACe,GAAG,CAAC,WAAW,CAAE,CAAC,CAAC,CAAC,CACjD,CAAE,MAAOV,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAChB,CACJ,CAAC,CAED,OAAQH,aAAa,CAAEU,aAAa,CAAEH,aAAa,CAAEK,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}