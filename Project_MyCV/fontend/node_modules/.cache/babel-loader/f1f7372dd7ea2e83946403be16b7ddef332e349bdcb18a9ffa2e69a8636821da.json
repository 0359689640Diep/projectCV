{"ast":null,"code":"import*as httpRequest from\"../utils/httpRequest\";import{notification}from\"../components/notification\";export const postAccount=async body=>{try{const response=await httpRequest.post(\"account/createAccount\",body);return response;}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error;}};export const logOut=async()=>{try{const response=await httpRequest.post(\"account/sign-out\",{},'\"Content-Type\": \"application/json\"');return response;}catch(error){return error;}};export const singIn=async body=>{try{const response=await httpRequest.post(\"account/signin\",body,'\"Content-Type\": \"application/json\"');return response;}catch(error){return error;}};export const updateAccount=async(data,id)=>{try{const response=await httpRequest.update(\"account/updateAccount/\",data,id,true);return response;}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error;}};export const getAccount=async()=>{try{const response=await httpRequest.get(\"account/getAllAccount\",{},true);return response;}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};}};export const getAccountForClient=async()=>{try{const response=await httpRequest.get(\"account/getAllAccountForClient\",{});return response;}catch(error){console.log(error);}};export const getAccountByRequest=async request=>{try{const response=await httpRequest.get(\"account/\".concat(request));return response;}catch(error){console.log(error);}};export const deleteAccount=async id=>{try{const response=await httpRequest.remote('account/deleteAccount',id);return response;}catch(error){if(error.response.status===403){notification(error.response.data.message,\"error\",\"/login\");};return error.response;}};","map":{"version":3,"names":["httpRequest","notification","postAccount","body","response","post","error","status","data","message","logOut","singIn","updateAccount","id","update","getAccount","get","getAccountForClient","console","log","getAccountByRequest","request","concat","deleteAccount","remote"],"sources":["D:/FPT Polytechnic/ListProject/projectCV/Project_MyCV/fontend/src/Services/account.js"],"sourcesContent":["import * as httpRequest from \"../utils/httpRequest\";\r\nimport { notification } from \"../components/notification\";\r\n\r\nexport const postAccount = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/createAccount`, body);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };     \r\n        return error;\r\n    }\r\n};\r\nexport const logOut = async () => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/sign-out`, {}, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) { \r\n        return error;\r\n    }\r\n};\r\nexport const singIn = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const updateAccount = async (data, id) => {\r\n    try {\r\n        const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };        \r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getAccount = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccount`, {}, true);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };\r\n    }\r\n}\r\nexport const getAccountForClient = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccountForClient`, {});\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getAccountByRequest = async (request) => {\r\n    try {\r\n        const response = await httpRequest.get(`account/${request}`);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deleteAccount = async (id) => {\r\n    try {\r\n        const response = await httpRequest.remote('account/deleteAccount', id);\r\n        return response;\r\n    } catch (error) {\r\n        if(error.response.status === 403){\r\n            notification(error.response.data.message, \"error\", \"/login\");\r\n        };\r\n        return error.response;\r\n    }\r\n}"],"mappings":"AAAA,MAAO,GAAK,CAAAA,WAAW,KAAM,sBAAsB,CACnD,OAASC,YAAY,KAAQ,4BAA4B,CAEzD,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,IAAI,EAAK,CAEvC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACK,IAAI,yBAA0BF,IAAI,CAAC,CACtE,MAAO,CAAAC,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACK,KAAK,CAACF,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAChB,CACJ,CAAC,CACD,MAAO,MAAM,CAAAI,MAAM,CAAG,KAAAA,CAAA,GAAY,CAE9B,GAAI,CACA,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACK,IAAI,oBAAqB,CAAC,CAAC,CAAE,oCAAoC,CAAC,CACrG,MAAO,CAAAD,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAChB,CACJ,CAAC,CACD,MAAO,MAAM,CAAAK,MAAM,CAAG,KAAO,CAAAR,IAAI,EAAK,CAElC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACK,IAAI,kBAAmBF,IAAI,CAAE,oCAAoC,CAAC,CACrG,MAAO,CAAAC,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAChB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAM,aAAa,CAAG,KAAAA,CAAOJ,IAAI,CAAEK,EAAE,GAAK,CAC7C,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACc,MAAM,CAAC,wBAAwB,CAAEN,IAAI,CAAEK,EAAE,CAAE,IAAI,CAAC,CACnF,MAAO,CAAAT,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACK,KAAK,CAACF,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAChB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAS,UAAU,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACgB,GAAG,yBAA0B,CAAC,CAAC,CAAE,IAAI,CAAC,CACzE,MAAO,CAAAZ,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACK,KAAK,CAACF,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACL,CACJ,CAAC,CACD,MAAO,MAAM,CAAAQ,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACA,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACgB,GAAG,kCAAmC,CAAC,CAAC,CAAC,CAC5E,MAAO,CAAAZ,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC,CACtB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAc,mBAAmB,CAAG,KAAO,CAAAC,OAAO,EAAK,CAClD,GAAI,CACA,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACgB,GAAG,YAAAM,MAAA,CAAYD,OAAO,CAAE,CAAC,CAC5D,MAAO,CAAAjB,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC,CACtB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAiB,aAAa,CAAG,KAAO,CAAAV,EAAE,EAAK,CACvC,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAACwB,MAAM,CAAC,uBAAuB,CAAEX,EAAE,CAAC,CACtE,MAAO,CAAAT,QAAQ,CACnB,CAAE,MAAOE,KAAK,CAAE,CACZ,GAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAC,CAC7BN,YAAY,CAACK,KAAK,CAACF,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAE,OAAO,CAAE,QAAQ,CAAC,CAChE,CAAC,CACD,MAAO,CAAAH,KAAK,CAACF,QAAQ,CACzB,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}