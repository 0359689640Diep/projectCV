{"ast":null,"code":"import * as httpRequest from \"../utils/httpRequest\";\nexport const postAccount = async body => {\n  try {\n    const response = await httpRequest.post(`account/createAccount`, body);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const singIn = async body => {\n  try {\n    const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const updateAccount = async (data, id) => {\n  try {\n    const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const getAccount = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccount`, {}, true);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAccountForClient = async () => {\n  try {\n    const response = await httpRequest.get(`account/getAllAccount`, {}, true);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAccountByRequest = async request => {\n  try {\n    const response = await httpRequest.get(`account/${request}`);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAccount = async id => {\n  try {\n    const response = await httpRequest.remote('account/deleteAccount', id);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};","map":{"version":3,"names":["httpRequest","postAccount","body","response","post","error","singIn","updateAccount","data","id","update","getAccount","get","console","log","getAccountForClient","getAccountByRequest","request","deleteAccount","remote"],"sources":["D:/FPT Polytechnic/ListProject/projectCV/Project_MyCV/fontend/src/Services/account.js"],"sourcesContent":["import * as httpRequest from \"../utils/httpRequest\";\r\n\r\nexport const postAccount = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/createAccount`, body);\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\nexport const singIn = async (body) => {\r\n\r\n    try {\r\n        const response = await httpRequest.post(`account/signin`, body, '\"Content-Type\": \"application/json\"');\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const updateAccount = async (data, id) => {\r\n    try {\r\n        const response = await httpRequest.update(\"account/updateAccount/\", data, id, true);\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getAccount = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccount`, {}, true);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const getAccountForClient = async () => {\r\n    try {\r\n        const response = await httpRequest.get(`account/getAllAccount`, {}, true);\r\n        console.log(response);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getAccountByRequest = async (request) => {\r\n    try {\r\n        const response = await httpRequest.get(`account/${request}`);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deleteAccount = async (id) => {\r\n    try {\r\n        const response = await httpRequest.remote('account/deleteAccount', id);\r\n        return response;\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,sBAAsB;AAEnD,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EAEvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAE,uBAAsB,EAAEF,IAAI,CAAC;IACtE,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AACD,OAAO,MAAMC,MAAM,GAAG,MAAOJ,IAAI,IAAK;EAElC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI,CAAE,gBAAe,EAAEF,IAAI,EAAE,oCAAoC,CAAC;IACrG,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,KAAK;EAC7C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,WAAW,CAACU,MAAM,CAAC,wBAAwB,EAAEF,IAAI,EAAEC,EAAE,EAAE,IAAI,CAAC;IACnF,OAAON,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMH,WAAW,CAACY,GAAG,CAAE,uBAAsB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACzE,OAAOT,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMH,WAAW,CAACY,GAAG,CAAE,uBAAsB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACzEC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMH,WAAW,CAACY,GAAG,CAAE,WAAUK,OAAQ,EAAC,CAAC;IAC5D,OAAOd,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAOT,EAAE,IAAK;EACvC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,WAAW,CAACmB,MAAM,CAAC,uBAAuB,EAAEV,EAAE,CAAC;IACtE,OAAON,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACF,QAAQ;EACzB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}